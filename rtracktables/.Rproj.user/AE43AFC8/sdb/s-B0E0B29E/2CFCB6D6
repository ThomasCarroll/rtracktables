{
    "contents" : "MakeIGVSampleMetadata <- function(sampleMetadata,SampleSheet,igvdirectory){\n  write.table(\"#sampleTable\",file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,sep=\"\\t\")\n  colnames(sampleMetadata)[1] <- \"Linking_id\"\n  print(colnames(sampleMetadata))\n  write.table(sampleMetadata,file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=T,quote=F,append=T,sep=\"\\t\")\n  BamMappings <- cbind(paste(SampleSheet[!is.na(SampleSheet[,\"bam\"]),\"SampleName\"],\"Bam\",sep=\"_\"),SampleSheet[,\"SampleName\"])\n  BigWigMappings <- cbind(paste(SampleSheet[!is.na(SampleSheet[,\"bigwig\"]),\"SampleName\"],\"Bigwig\",sep=\"_\"),SampleSheet[,\"SampleName\"])\n  IntervalMappings <- cbind(paste(SampleSheet[!is.na(SampleSheet[,\"interval\"]),\"SampleName\"],\"Interval\",sep=\"_\"),SampleSheet[,\"SampleName\"])\n  write.table(\"\\n#sampleMapping\",file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,append=T,sep=\"\\t\")\n  write.table(\"#Bams\",file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,append=T,sep=\"\\t\")\n  write.table(BamMappings,file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,append=T,sep=\"\\t\")\n  write.table(\"\\n#BigWigs\",file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,append=T,sep=\"\\t\")\n  write.table(BigWigMappings,file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,append=T,sep=\"\\t\")\n  write.table(\"\\n#Intervals\",file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,append=T,sep=\"\\t\")\n  write.table(IntervalMappings,file.path(igvdirectory,\"SampleMetadata.txt\"),row.names=F,col.names=F,quote=F,append=T,sep=\"\\t\")\n}\nMakeIGVSessionXML <- function(files,fileType,names,igvdirectory,XMLname,genomeName,locusName=\"All\"){\n  i <- 1\n  require(XML)\n  files <- gsub(\".xls\",\".bed\",files)\n  Output <- file.path(igvdirectory,paste(XMLname,\".xml\",sep=\"\"))\n  resources <- vector(\"list\",length=length(files))\n  if(fileType == \"Bam\"){\n    NewName <- paste(names[i],\"_Bam\",sep=\"\")\n  }\n  if(fileType == \"Bigwig\"){\n    NewName <- paste(names[i],\"_Bigwig\",sep=\"\")\n  }\n  if(fileType == \"Macs\"){\n    NewName <- paste(names[i],\"_Macs\",sep=\"\")\n  }\n  if(fileType == \"MacsDiff\"){\n    NewName <- paste(names[i],\"_MacsDiff\",sep=\"\")\n  }\n  if(fileType == \"TPICs\"){\n    NewName <- paste(names[i],\"_TPICs\",sep=\"\")\n  }\n  if(fileType == \"Sicer\"){\n    NewName <- paste(names[i],\"_Sicer\",sep=\"\")\n  }\n  GlobalNode <- newXMLNode(\"Global\",attrs=c(genome.value=genomeName,groupTracksBy=\"Linking_id\",locus=locusName,version=3))\n  ResourcesNode <- newXMLNode(\"Resources\",parent=GlobalNode)\n  for(i in 1:length(resources)){\n    resources[[i]] <-  newXMLNode(\"Resource\",parent=ResourcesNode,attrs=c(label=NewName[i],name=NewName[i],path=relativePath(files[i],Output),relativePath=T))\n  }\n  MetaDataNode <- newXMLNode(\"Resource\",parent=ResourcesNode,attrs=c(name=\"SampleMetadata\",path=relativePath(file.path(igvdirectory,\"SampleMetadata.txt\"),Output),relativePath=T))\n  PanelDataNode <-  newXMLNode(\"Panel\",attrs=c(height=\"350\",name=\"DataPanel\",width=\"1115\"),parent=GlobalNode)\n  if(fileType == \"Bam\"){\n    TrackNode <-  newXMLNode(\"Track\",attrs=c(altColor=\"0,0,178\",color=\"0,0,178\",colorOption=\"UNEXPECTED_PAIR\",displayMode=\"EXPANDED\",featureVisibilityWindow=\"-1\",fontSize=\"10\",id=relativePath(files[i],Output),name=NewName[i],showDataRange=\"true\",sortByTag=\"\",visible=\"true\"),parent=PanelDataNode)\n  }\n  if(fileType == \"Bigwig\"){\n    TrackNode <-  newXMLNode(\"Track\",attrs=c(altColor=\"0,0,178\",autoscale=\"true\",color=\"0,0,178\",displayMode=\"COLLAPSED\",featureVisibilityWindow=\"-1\",fontSize=\"10\",id=relativePath(files[i],Output),name=NewName[i],renderer=\"BAR_CHART\",showDataRange=\"true\",visible=\"true\",windowFunction=\"mean\"),parent=PanelDataNode)\n    DisplayRangeNode <-  newXMLNode(\"DataRange\",attrs=c(baseline=\"0.0\",drawBaseline=\"true\",flipAxis=\"false\",maximum=\"50\",minimum=\"5\",type=\"LINEAR\"),parent=TrackNode)\n  }\n  if(fileType == \"Macs\" | fileType == \"TPICs\"| fileType == \"Sicer\" | fileType == \"MacsDiff\"){\n    TrackNode <-  newXMLNode(\"Track\",attrs=c(altColor=\"0,0,178\",color=\"0,0,178\",displayMode=\"COLLAPSED\",featureVisibilityWindow=\"-1\",fontSize=\"10\",height=\"45\",id=relativePath(files[i],Output),name=NewName[i],renderer=\"BASIC_FEATURE\",showDataRange=\"true\",sortable=\"false\",visible=\"true\",windowFunction=\"count\"),parent=PanelDataNode)\n  }\n  saveXML(GlobalNode,file=Output)\n  \n  return(Output)\n}\n\nSampleSheet <- cbind(\n                  c(\"Pu1\",\"Myc\",\"Ik_prePro\",\"Ik_pro\"),\n                  c(\"ProB\",\"ProB\",\"PreProB\",\"ProB\"),\n                  c(\"Pu1\",\"Myc\",\"Ik\",\"Ik\")\n)\ncolnames(SampleSheet) <- c(\"SampleName\",'Tissue',\"Factor\")\nfileSheet <- cbind(\n  c(\"Pu1\",\"Myc\",\"Ik_prePro\",\"Ik_pro\"),\n  c(NA,NA,NA,NA),\n  c(\"/Users/tcarroll/Downloads/randomTracks-2/Pu1DupMarkedNormalised.bw\",\n    \"/Users/tcarroll/Downloads/randomTracks-2/MycDupMarkedNormalised.bw\",\n    \"/Users/tcarroll/Downloads/randomTracks-2/Ikaros_2_preproBDupMarkedNormalised.bw\",\n    \"/Users/tcarroll/Downloads/randomTracks-2/Ikaros_1_proBDupMarkedNormalised.bw\"),\n  c(\"/Users/tcarroll/Downloads/randomTracks/Pu1_WithInput_Input_2_proB_peaks.bed\",\n    \"/Users/tcarroll/Downloads/randomTracks/Myc_WithInput_Input_Ch12_peaks.bed\",\n    \"/Users/tcarroll/Downloads/randomTracks/Ikaros_2_preproB_WithInput_Input_2_proB_peaks.bed\",\n    \"/Users/tcarroll/Downloads/randomTracks/Ikaros_1_proB_WithInput_Input_2_proB_peaks.bed\")\n)\ncolnames(fileSheet) <- c(\"SampleName\",\"bam\",\"bigwig\",\"interval\") \nMakeIGVSampleMetadata(SampleSheet,fileSheet,getwd())\nMakeIGVSampleMetadata(SampleSheet,fileSheet,file.path(\"/Users/tcarroll/Downloads/DataTables-1.10.1/examples/data_sources\",\"IGV\"))\nMakeIGVSessionXML(fileSheet,file.path(\"/Users/tcarroll/Downloads/DataTables-1.10.1/examples/data_sources\",\"IGV\"),\"WeiIGV\",\"mm9\",locusName=\"All\")\nMakeIGVSampleMetadata(SampleSheet,fileSheet,\"/Users/tcarroll/Documents\")\nMakeIGVSessionXML(fileSheet,\"/Users/tcarroll/Documents\",\"WeiIGV\",\"mm9\",locusName=\"All\")\n\ntitles <- colnames(SampleSheet)\nnames(titles) <- rep(\"title\",length=length(titles))\n\nexportNormalisedBW <- function(bamFile,qc,normaliseTo=\"blacklisted\"){\n  require(GenomicAlignments)\n  require(rtracklayer)\n  #library(QuasR)\n  extendBy <- fragmentlength(qc)\n  #extendBy <- qc\n  message(\"Reading tags from \",bamFile,appendLF=FALSE)\n  #totalReads <- alignmentStats(bamFile)[,\"mapped\"]\n  if(normaliseTo == \"blacklisted\"){\n    totalReads <- qc@FlagAndTagCounts[\"MapQPass\"] - qc@CountsInFeatures$BlackList\n  }\n  if(normaliseTo == \"Total\"){\n    totalReads <- qc@FlagAndTagCounts[\"Mapped\"]\n  }  \n  if(normaliseTo == \"UniqueTotal\"){\n    totalReads <- qc@FlagAndTagCounts[\"Mapped\"]-qc@FlagAndTagCounts[\"Duplicates\"]\n  }  \n  total <- readGAlignmentsFromBam(bamFile)\n  message(\"..done\")\n  message(\"Read in \",length(total),\" reads\")\n  message(\"Extending reads to fragmentlength of \",extendBy,\" ..\",appendLF=FALSE)\n  temp <- resize(as(total,\"GRanges\"),extendBy,\"start\")\n  message(\"..done\")\n  rm(total)\n  gc()\n  message(\"Calculating coverage..\",appendLF=FALSE)\n  genomeCov <- coverage(temp)\n  rm(temp)\n  message(\"..done\")\n  \n  message(\"Normalised coverage..\",appendLF=FALSE)\n  genomeCov <- (genomeCov/totalReads)*1000000\n  message(\"..done\")\n  message(\"Exporting coverage..\",appendLF=FALSE)\n  export.bw(genomeCov,file.path(dirname(dirname(bamFile)),gsub(\"\\\\.bam\",\"Normalised\\\\.bw\",basename(bamFile))))\n  message(\"..done\")\n}\nload(file =\"Downloads/Sample_R2-INPUT6hDupMarked.RData\")\nbamFile <- \"Downloads//Sample_R2-6hDupMarked.bam\"\nexportNormalisedBW(bamFile,qc)\n?\ngc\n",
    "created" : 1405280741944.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1658004487",
    "id" : "2CFCB6D6",
    "lastKnownWriteTime" : 1405455065,
    "path" : "~/Desktop/rtracktables/morecool.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}